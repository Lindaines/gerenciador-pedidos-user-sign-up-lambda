name: "terraform-deploy"

on:
  push:
    branches:
      - main

jobs:
  PushToAWS:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
    steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8

        - name: Zip Lambda Function
          run: |
            mkdir zip
            zip -r zip/api.zip api
        - name: Push Zip to S3
          uses: jakejarvis/s3-sync-action@v0.3.1
          env:
            SOURCE_DIR: "./zip"
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
        - name: Set up AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
            aws-region: ${{ secrets.AWS_REGION }}
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2

        - name: Terraform Init
          id: init
          run: |
            terraform fmt
            terraform init -upgrade

        - name: Terraform Apply
          run: terraform apply -auto-approve
          env:
            TF_VAR_aws_s3_bucket: ${{ secrets.AWS_S3_BUCKET }}
            TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
            TF_VAR_aws_access_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            TF_VAR_aws_secret: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
